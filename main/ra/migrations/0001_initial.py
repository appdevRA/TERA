# Generated by Django 3.2.6 on 2021-11-17 16:23

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Headers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=5000)),
            ],
            options={
                'db_table': 'Headers',
            },
        ),
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=5)),
                ('time', models.DateTimeField(default=datetime.datetime(2021, 11, 18, 0, 23, 2, 422223))),
            ],
            options={
                'db_table': 'Practice',
            },
        ),
        migrations.CreateModel(
            name='Proxies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proxy', models.CharField(max_length=100)),
                ('isUsed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'Proxies',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=100)),
                ('last_login', models.DateTimeField(default=datetime.datetime(2021, 11, 18, 0, 23, 2, 419222))),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.CharField(default='', max_length=100)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=datetime.datetime(2021, 11, 18, 0, 23, 2, 419222))),
                ('department_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ra.department')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Folders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentFolder_id', models.IntegerField(null=True)),
                ('foldername', models.CharField(max_length=25)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ra.user')),
            ],
            options={
                'db_table': 'Folders',
            },
        ),
        migrations.CreateModel(
            name='Bookmarks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('websiteTitle', models.CharField(max_length=1000)),
                ('itemType', models.CharField(max_length=50, null=True)),
                ('url', models.CharField(max_length=2000, null=True)),
                ('title', models.CharField(max_length=1000, null=True)),
                ('subtitle', models.CharField(max_length=1000, null=True)),
                ('author', models.CharField(max_length=1000, null=True)),
                ('description', models.CharField(max_length=1000, null=True)),
                ('journalItBelongs', models.CharField(max_length=1000, null=True)),
                ('volume', models.IntegerField(null=True)),
                ('numOfCitation', models.CharField(default='', max_length=1000)),
                ('numOfDownload', models.CharField(default='', max_length=1000)),
                ('numOfPages', models.CharField(default='', max_length=1000)),
                ('edition', models.CharField(default='', max_length=20)),
                ('publisher', models.CharField(default='', max_length=1000)),
                ('publicationYear', models.CharField(max_length=20)),
                ('dateAccessed', models.DateTimeField(default=datetime.datetime(2021, 11, 18, 0, 23, 2, 420223))),
                ('dateAdded', models.DateTimeField(default=datetime.datetime(2021, 11, 18, 0, 23, 2, 420223))),
                ('DOI', models.CharField(default='', max_length=200)),
                ('ISSN', models.CharField(default='', max_length=100)),
                ('isRemoved', models.IntegerField(default=0)),
                ('isFavorite', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ra.user')),
            ],
            options={
                'db_table': 'Bookmarks',
            },
        ),
        migrations.CreateModel(
            name='Bookmark_folders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookmark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ra.bookmarks')),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ra.folders')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ra.user')),
            ],
            options={
                'db_table': 'Bookmark_folders',
            },
        ),
    ]
